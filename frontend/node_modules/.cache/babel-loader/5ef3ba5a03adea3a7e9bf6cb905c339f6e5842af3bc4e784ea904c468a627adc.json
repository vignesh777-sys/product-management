{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n});\n\n// Product API functions\nexport const productAPI = {\n  // Get all products with optional filters\n  getAll: async (params = {}) => {\n    const response = await api.get('/products', {\n      params\n    });\n    return response;\n  },\n  // Get single product by ID\n  getById: async id => {\n    const response = await api.get(`/products/${id}`);\n    return response;\n  },\n  // Create new product\n  create: async productData => {\n    const response = await api.post('/products', productData);\n    return response;\n  },\n  // Update product\n  update: async (id, productData) => {\n    const response = await api.put(`/products/${id}`, productData);\n    return response;\n  },\n  // Delete product\n  delete: async id => {\n    const response = await api.delete(`/products/${id}`);\n    return response;\n  },\n  // Search products\n  search: async (searchTerm, category = '', sort = 'price', order = 'asc') => {\n    const params = {};\n    if (searchTerm) params.search = searchTerm;\n    if (category && category !== 'All Categories') params.category = category;\n    if (sort) params.sort = sort;\n    if (order) params.order = order;\n    const response = await api.get('/products', {\n      params\n    });\n    return response;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","data","_error$response","_error$response2","message","productAPI","getAll","params","get","getById","id","productData","post","update","put","delete","search","searchTerm","category","sort","order"],"sources":["C:/Users/vinay/Desktop/Product Management Application/pms/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    return Promise.reject(error.response?.data || error.message);\r\n  }\r\n);\r\n\r\n// Product API functions\r\nexport const productAPI = {\r\n  // Get all products with optional filters\r\n  getAll: async (params = {}) => {\r\n    const response = await api.get('/products', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get single product by ID\r\n  getById: async (id) => {\r\n    const response = await api.get(`/products/${id}`);\r\n    return response;\r\n  },\r\n\r\n  // Create new product\r\n  create: async (productData) => {\r\n    const response = await api.post('/products', productData);\r\n    return response;\r\n  },\r\n\r\n  // Update product\r\n  update: async (id, productData) => {\r\n    const response = await api.put(`/products/${id}`, productData);\r\n    return response;\r\n  },\r\n\r\n  // Delete product\r\n  delete: async (id) => {\r\n    const response = await api.delete(`/products/${id}`);\r\n    return response;\r\n  },\r\n\r\n  // Search products\r\n  search: async (searchTerm, category = '', sort = 'price', order = 'asc') => {\r\n    const params = {};\r\n    if (searchTerm) params.search = searchTerm;\r\n    if (category && category !== 'All Categories') params.category = category;\r\n    if (sort) params.sort = sort;\r\n    if (order) params.order = order;\r\n    \r\n    const response = await api.get('/products', { params });\r\n    return response;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}